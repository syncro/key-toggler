{"version":3,"file":"key-toggler-bundle.js","sources":["../src/key-toggler.js","../index.js"],"sourcesContent":["/**\n *\n * web component that shows and hides any element by selector after hotkey pressed\n *\n * <key-toggler target-sl=\"#header\" mod-key=\"ctrl\" key=\"c\"></key-toggler>\n\n <script type=\"module\">\n import { KeyToggler } from '/path/to/key-toggler.js';\n\n customElements.define('key-toggler', KeyToggler);\n </script>\n *\n *\n */\n\nexport const KEY_DEFAULT = 'c';\nexport const KEY_ATTR_NAME = 'key';\nexport const MOD_ATTR_NAME = 'mod-key';\nexport const TARGET_ATTR_NAME = 'target-sl';\n\nexport class KeyToggler extends HTMLElement {\n\n    isVisible(el) {\n        return !! (el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n    }\n\n    get menuEl() {\n        if (! this._menuEl) {\n            if (this.hasAttribute(TARGET_ATTR_NAME)) {\n                this._menuEl = document.querySelector(this.getAttribute(TARGET_ATTR_NAME));\n            } else {\n                console.warn('no selector provided for MenuTogler custom element');\n            }\n        }\n        return this._menuEl;\n    }\n\n    modKeyPressed(event) {\n        if (this.hasAttribute(MOD_ATTR_NAME)) {\n            let value = false;\n            switch (this.getAttribute(MOD_ATTR_NAME)) {\n                case 'meta':\n                    value = (event.metaKey);\n                    break;\n                case 'shift':\n                    value = (event.shiftKey);\n                    break;\n                default:\n                    value = (event.ctrlKey);\n                    break;\n            }\n            return value;\n        } else {\n            return (event.ctrlKey);\n        }\n    }\n\n    letterKeyPressed(event) {\n        let key = KEY_DEFAULT;\n        if (this.hasAttribute(KEY_ATTR_NAME) && this.getAttribute(KEY_ATTR_NAME).match(/a-Az-Z/)) {\n            this.key = this.getAttribute(KEY_ATTR_NAME);\n        }\n        return (String.fromCharCode(event.which).toLowerCase() === key);\n    }\n\n    toggleTarget(event) {\n        if (this.modKeyPressed(event) && this.letterKeyPressed(event)) {\n            if (this.isVisible(this.menuEl)) {\n                this._oldDisplay = this.menuEl.style.display;\n                this.menuEl.style.display = 'none';\n            } else {\n                this.menuEl.style.display = this._oldDisplay || 'block';\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.keyHandle = this.toggleTarget.bind(this);\n        document.addEventListener('keydown', this.keyHandle);\n    }\n\n    disconnectedCallback() {\n        if (this.keyHandle) {\n            document.removeEventListener('keydown', this.keyHandle);\n        }\n    }\n}\n\n","\n\nexport { KeyToggler } from './src/key-toggler.js';\n\nif (document.body.classList.contains('key-togger-autoreg')) {\n\n    customElements.define('key-toggler', KeyToggler);\n}"],"names":["KEY_DEFAULT","KEY_ATTR_NAME","MOD_ATTR_NAME","TARGET_ATTR_NAME","KeyToggler","el","offsetWidth","offsetHeight","getClientRects","length","event","hasAttribute","value","getAttribute","metaKey","shiftKey","ctrlKey","key","match","String","fromCharCode","which","toLowerCase","modKeyPressed","letterKeyPressed","isVisible","menuEl","_oldDisplay","style","display","keyHandle","toggleTarget","bind","document","addEventListener","removeEventListener","_menuEl","querySelector","console","warn","HTMLElement","body","classList","contains","customElements","define"],"mappings":"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"}